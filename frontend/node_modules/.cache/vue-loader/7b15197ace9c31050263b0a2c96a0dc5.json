{"remainingRequest":"D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\src\\views\\imagecreate\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\src\\views\\imagecreate\\index.vue","mtime":1682515681121},{"path":"D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7c2F2ZUFzfSBmcm9tICJmaWxlLXNhdmVyIjsKaW1wb3J0IEZpbGVTYXZlciBmcm9tICJmaWxlLXNhdmVyIjsKaW1wb3J0IHt3cml0ZSwgdXRpbHN9IGZyb20gInhsc3giOwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0ZXh0YXJlYTogIiIsCiAgICAgIGlucHV0OiAiIiwKICAgICAgcmVzdWx0OiAiIiwKICAgICAgc3RhZ2U6IGZhbHNlLAogICAgICB2aXNpYmxlOiBmYWxzZSwKICAgICAgaW1hZ2VVcmw6ICcnLAogICAgICBmaWxlTGlzdDogIiIsCiAgICAgIHRhYmxlRGF0YTogW10sCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8v5a+85Ye6ZXhjZWwKICAgIGhhbmRsZURvd25sb2FkKG5hbWUpIHsKICAgICAgbGV0IHRhYmxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImV4Y2VsX3RhYmxlIik7CiAgICAgIGxldCBldCA9IHV0aWxzLnRhYmxlX3RvX2Jvb2sodGFibGUpOwogICAgICBsZXQgb3V0cHV0ID0gd3JpdGUoZXQsIHsKICAgICAgICBib29rVHlwZTogInhsc3giLAogICAgICAgIGJvb2tTU1Q6IHRydWUsCiAgICAgICAgdHlwZTogImFycmF5IiwKICAgICAgfSk7CgogICAgICB0cnkgewogICAgICAgIEZpbGVTYXZlci5zYXZlQXMoCiAgICAgICAgICBuZXcgQmxvYihbb3V0cHV0XSwge3R5cGU6ICJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0ifSksCiAgICAgICAgICBgJHtuYW1lfS54bHN4YAogICAgICAgICk7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgfQoKICAgICAgcmV0dXJuIG91dHB1dDsKICAgIH0sCiAgICBlcnJvckNvcnJlY3QoKSB7CiAgICAgIHZhciB0aGF0ID0gdGhpczsKICAgICAgdGhhdC5sb2FkaW5nID0gdHJ1ZTsKICAgICAgdmFyIGtleSA9IHRoYXQuaW5wdXQ7CiAgICAgIGNvbnNvbGUubG9nKGtleSkKICAgICAgaWYgKGtleSA9PT0gIiIpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLovpPlhaXlhoXlrrnkuI3og73kuLrnqboiLAogICAgICAgICAgdHlwZTogIndhcm5pbmciLAogICAgICAgIH0pOwogICAgICAgIHRoYXQucmVzdWx0ID0gIiI7CiAgICAgICAgdGhhdC52aXNpYmxlID0gZmFsc2U7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8g6K+35rGC5ZCO56uvQVBJ5pyN5Yqh77yM6K+35rGC5pa55rOV5Li6cG9zdO+8jOivt+axguS9k+Wtl+auteS4umpzb27moLzlvI8gdGV4dAogICAgICAgIGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9hcGkvZ3B0L2ltYWdlQ3JlYXRlJywgewogICAgICAgICAgICB0ZXh0OiB0aGF0LmlucHV0LAogICAgICAgICAgICBrZXk6IHRoYXQuaW5wdXQKICAgICAgICAgIH0pLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICAgICAgdGhhdC5pbWFnZVVybCA9IHJlc3BvbnNlLmRhdGEuY29ycmVjdGlvblJlc3VsdHMKICAgICAgICAgICAgY29uc29sZS5sb2codGhhdC5pbWFnZVVybCkKICAgICAgICAgICAgdGhhdC52aXNpYmxlID0gdHJ1ZTsKICAgICAgICAgICAgdGhhdC5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgIHRoYXQuJG1lc3NhZ2UoewogICAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwKICAgICAgICAgICAgICBtZXNzYWdlOiAiU3VjY2Vzc++8gSIsCiAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICAgIHRoYXQucmVzdWx0ID0gIiI7CiAgICAgICAgICAgIHRoYXQudmlzaWJsZSA9IGZhbHNlOwogICAgICAgICAgICB0aGF0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsCiAgICAgICAgICAgICAgbWVzc2FnZTogIuivt+axguWHuueOsOW8guW4uO+8gSIsCiAgICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGJlZm9yZVVwbG9hZChmaWxlKSB7CiAgICAgIHRoaXMuZmlsZUxpc3QgPSBbZmlsZV07CiAgICAgIC8vIOivu+WPlnR4dOaWh+S7tgogICAgICB0aGlzLnJlYWQoZmlsZSk7CiAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgIHNob3dDbG9zZTogdHJ1ZSwKICAgICAgICBtZXNzYWdlOiAidHh05paH5pys5YaF5a655a+85YWl5oiQ5Yqf77yBIiwKICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgIH0pOwogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgcmVhZChmKSB7CiAgICAgIGNvbnN0IHJkID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICByZC5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIC8vIHRoaXMucmVhZEFzQXJyYXlCdWZmZXLlh73mlbDlhoXvvIzkvJrlm57osIN0aGlzLm9ubG9hZOWHveaVsOOAguWcqOi/memHjOWkhOeQhue7k+aenAogICAgICAgIGNvbnN0IGNvbnQgPSByZC5yZWFkaW5nKHtlbmNvZGU6ICJVVEYtOCJ9KTsKICAgICAgICBjb25zb2xlLmxvZyhjb250KTsKICAgICAgICB0aGF0LnRleHRhcmVhID0gY29udDsKICAgICAgfTsKICAgICAgcmQucmVhZEFzQmluYXJ5U3RyaW5nKGYpOwogICAgfSwKICAgIHNhdmVSZXN1bHQoKSB7CiAgICAgIHZhciB0ZW1wRGF0YSA9IHRoaXMucmVzdWx0OwogICAgICBpZiAodGVtcERhdGEgPT09ICIiKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAi6L6T5YWl5YaF5a655Li656m677yBIiwKICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgdGVtcFJlc3VsdCA9IG5ldyBCbG9iKFt0ZW1wRGF0YV0sIHsKICAgICAgICAgIHR5cGU6ICJ0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTgiLAogICAgICAgIH0pOwogICAgICAgIHNhdmVBcyh0ZW1wUmVzdWx0LCAiQ2hhdEdQVOe7k+aenC50eHQiKTsKICAgICAgfQogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAufile":"index.vue","sourceRoot":"src/views/imagecreate","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-col :span=\"12\">\n      <div class=\"tip\">请输入提示语句:</div>\n      <el-input\n        v-model=\"input\"\n        type=\"input\"\n        :disabled=\"stage\"\n        :rows=\"11\"\n        placeholder=\"请输入\"\n        clearable\n      />\n      <div style=\"padding-top: 10px; padding-bottom: 10px\">\n        <el-button type=\"primary\" @click=\"errorCorrect()\" :loading=\"loading\"\n        >开始创作\n        </el-button\n        >\n        <el-button\n          type=\"basic\"\n          style=\"margin-left: 24px; margin-top: 16px\"\n          @click=\"handleDownload('text-demo')\"\n        >导出图片\n        </el-button\n        >\n      </div>\n      <el-image style=\"padding-top: 48px\" :src=\"imageUrl\">\n        <template #error>\n          <div class=\"image-slot\">\n            <el-icon>\n              <icon-picture/>\n            </el-icon>\n          </div>\n        </template>\n      </el-image>\n    </el-col>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport {saveAs} from \"file-saver\";\nimport FileSaver from \"file-saver\";\nimport {write, utils} from \"xlsx\";\n\nexport default {\n  data() {\n    return {\n      textarea: \"\",\n      input: \"\",\n      result: \"\",\n      stage: false,\n      visible: false,\n      imageUrl: '',\n      fileList: \"\",\n      tableData: [],\n      loading: false,\n    };\n  },\n  methods: {\n    //导出excel\n    handleDownload(name) {\n      let table = document.getElementById(\"excel_table\");\n      let et = utils.table_to_book(table);\n      let output = write(et, {\n        bookType: \"xlsx\",\n        bookSST: true,\n        type: \"array\",\n      });\n\n      try {\n        FileSaver.saveAs(\n          new Blob([output], {type: \"application/octet-stream\"}),\n          `${name}.xlsx`\n        );\n      } catch (e) {\n      }\n\n      return output;\n    },\n    errorCorrect() {\n      var that = this;\n      that.loading = true;\n      var key = that.input;\n      console.log(key)\n      if (key === \"\") {\n        this.$message({\n          showClose: true,\n          message: \"输入内容不能为空\",\n          type: \"warning\",\n        });\n        that.result = \"\";\n        that.visible = false;\n      } else {\n        // 请求后端API服务，请求方法为post，请求体字段为json格式 text\n        axios.post('http://localhost:8000/api/gpt/imageCreate', {\n            text: that.input,\n            key: that.input\n          }).then((response) => {\n            console.log(response);\n            that.imageUrl = response.data.correctionResults\n            console.log(that.imageUrl)\n            that.visible = true;\n            that.loading = false;\n            that.$message({\n              showClose: true,\n              message: \"Success！\",\n              type: \"success\",\n            });\n          }).catch((error) => {\n            console.log(error);\n            that.result = \"\";\n            that.visible = false;\n            that.$message({\n              showClose: true,\n              message: \"请求出现异常！\",\n              type: \"error\",\n            });\n          });\n      }\n    },\n    beforeUpload(file) {\n      this.fileList = [file];\n      // 读取txt文件\n      this.read(file);\n      this.$message({\n        showClose: true,\n        message: \"txt文本内容导入成功！\",\n        type: \"success\",\n      });\n      return false;\n    },\n    read(f) {\n      const rd = new FileReader();\n      var that = this;\n      rd.onload = (e) => {\n        // this.readAsArrayBuffer函数内，会回调this.onload函数。在这里处理结果\n        const cont = rd.reading({encode: \"UTF-8\"});\n        console.log(cont);\n        that.textarea = cont;\n      };\n      rd.readAsBinaryString(f);\n    },\n    saveResult() {\n      var tempData = this.result;\n      if (tempData === \"\") {\n        this.$message({\n          showClose: true,\n          message: \"输入内容为空！\",\n          type: \"warning\",\n        });\n      } else {\n        var tempResult = new Blob([tempData], {\n          type: \"text/plain;charset=utf-8\",\n        });\n        saveAs(tempResult, \"ChatGPT结果.txt\");\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.tip {\n  font-family: PingFang SC, Helvetica Neue, Arial, Helvetica, sans-serif;\n  font-size: 14px;\n  font-weight: normal;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n</style>\n"]}]}