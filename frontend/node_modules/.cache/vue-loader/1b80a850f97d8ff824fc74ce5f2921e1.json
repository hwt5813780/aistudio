{"remainingRequest":"D:\\ML-AI\\mlainew\\newone\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ML-AI\\mlainew\\newone\\src\\views\\onlinecsc\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ML-AI\\mlainew\\newone\\src\\views\\onlinecsc\\index.vue","mtime":1678687015832},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678687252373},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\babel-loader\\lib\\index.js","mtime":1678687255549},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678687252373},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\vue-loader\\lib\\index.js","mtime":1678687256835}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBzYXZlQXMgfSBmcm9tICdmaWxlLXNhdmVyJw0KaW1wb3J0IEZpbGVTYXZlciBmcm9tICdmaWxlLXNhdmVyJw0KaW1wb3J0IHsgd3JpdGUsIHV0aWxzIH0gZnJvbSAneGxzeCc7DQppbXBvcnQgeyBjaGF0Z3B0IH0gZnJvbSAiQC9hcGkvY2hhdGdwdCI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdGV4dGFyZWE6ICcnLA0KICAgICAgaW5wdXQ6ICcnLA0KICAgICAgcmVzdWx0OiAnJywNCiAgICAgIHN0YWdlOiBmYWxzZSwNCiAgICAgIHZpc2libGU6IGZhbHNlLA0KICAgICAgZmlsZUxpc3Q6ICcnLA0KICAgICAgdGFibGVEYXRhOiBbXSwNCiAgICAgIGxvYWRpbmc6IGZhbHNlLA0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KDQogICAgLy/lr7zlh7pleGNlbA0KICAgIGhhbmRsZURvd25sb2FkKG5hbWUpIHsNCiAgICAgIGxldCB0YWJsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJleGNlbF90YWJsZSIpDQogICAgICBsZXQgZXQgPSB1dGlscy50YWJsZV90b19ib29rKHRhYmxlKQ0KICAgICAgbGV0IG91dHB1dCA9IHdyaXRlKGV0LCB7DQogICAgICAgIGJvb2tUeXBlOiAieGxzeCIsDQogICAgICAgIGJvb2tTU1Q6IHRydWUsDQogICAgICAgIHR5cGU6ICJhcnJheSINCiAgICAgIH0pDQoNCiAgICAgIHRyeSB7DQogICAgICAgIEZpbGVTYXZlci5zYXZlQXMobmV3IEJsb2IoW291dHB1dF0sIHsgdHlwZTogImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSIgfSksIGAke25hbWV9Lnhsc3hgKQ0KICAgICAgfSBjYXRjaCAoZSkgeyB9DQoNCiAgICAgIHJldHVybiBvdXRwdXQNCiAgICB9LA0KICAgIGFzeW5jIGVycm9yQ29ycmVjdCgpIHsNCiAgICAgIHZhciB0aGF0ID0gdGhpcw0KICAgICAgdGhhdC5sb2FkaW5nID0gdHJ1ZQ0KICAgICAgdmFyIGNvbnRleHQgPSB0aGF0LnRleHRhcmVhDQogICAgICB2YXIga2V5ID0gdGhhdC5pbnB1dA0KICAgICAgaWYgKGNvbnRleHQgPT09ICcnIHx8IGtleSA9PT0gJycpIHsNCiAgICAgICAgdGhpcy4kbWVzc2FnZSh7DQogICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLA0KICAgICAgICAgIG1lc3NhZ2U6ICfovpPlhaXlhoXlrrnkuI3og73kuLrnqbonLA0KICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJw0KICAgICAgICB9KQ0KICAgICAgICB0aGF0LnJlc3VsdCA9ICcnDQogICAgICAgIHRoYXQudmlzaWJsZSA9IGZhbHNlDQogICAgICB9IGVsc2Ugew0KICAgICAgICBjb25zb2xlLmxvZyhjb250ZXh0KQ0KICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNoYXRncHQoY29udGV4dCwga2V5KTsNCiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpDQogICAgICAgIHRoaXMudGFibGVEYXRhID0gcmVzcG9uc2UNCiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UNCiAgICAgIH0NCiAgICB9LA0KICAgIHNhdmVSZXN1bHQoKSB7DQogICAgICB2YXIgdGVtcERhdGEgPSB0aGlzLnJlc3VsdA0KICAgICAgaWYgKHRlbXBEYXRhID09PSAnJykgew0KICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsDQogICAgICAgICAgbWVzc2FnZTogJ+i+k+WFpeWGheWuueS4uuepuu+8gScsDQogICAgICAgICAgdHlwZTogJ3dhcm5pbmcnDQogICAgICAgIH0pDQogICAgICB9IGVsc2Ugew0KICAgICAgICB2YXIgdGVtcFJlc3VsdCA9IG5ldyBCbG9iKFt0ZW1wRGF0YV0sIHsgdHlwZTogJ3RleHQvcGxhaW47Y2hhcnNldD11dGYtOCcgfSkNCiAgICAgICAgc2F2ZUFzKHRlbXBSZXN1bHQsICdDaGF0R1BU57uT5p6cLnR4dCcpDQogICAgICB9DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAiCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/onlinecsc","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-col :span=\"12\">\r\n      <div class=\"tip\">\r\n        请输入需要提取的文本:\r\n      </div>\r\n      <el-input v-model=\"textarea\" type=\"textarea\" :disabled=\"stage\" :rows=\"11\" placeholder=\"请输入\" clearable />\r\n      <div class=\"tip\" style=\"padding-top:10px\">\r\n        请输入提取的信息类型（用逗号隔开）:\r\n      </div>\r\n      <el-input v-model=\"input\" type=\"input\" :disabled=\"stage\" :rows=\"11\" placeholder=\"请输入\" clearable />\r\n      <div style=\"padding-top:10px;padding-bottom:10px;\">\r\n        <el-button type=\"primary\" :loading=\"loading\" @click=\"errorCorrect()\">开始提取</el-button>\r\n        <el-button type=\"basic\" style=\"margin-left:24px;margin-top:16px;\"\r\n          @click=\"handleDownload('text-demo')\">导出Excel</el-button>\r\n      </div>\r\n\r\n      <div v-show=\"visible\" class=\"tip\">\r\n        ChatGPT:\r\n      </div>\r\n      <el-input v-show=\"visible\" v-model=\"result\" type=\"textarea\" :rows=\"11\" />\r\n    </el-col>\r\n    <el-col :span=\"12\">\r\n      <el-table v-loading=\"loading\" id=\"excel_table\" :data=\"tableData\"\r\n        style=\"width: 100%;margin-left:48px;margin-right:48px;\">\r\n        <el-table-column prop=\"prompt\" label=\"Prompt\"></el-table-column>\r\n        <el-table-column prop=\"value\" label=\"Value\"></el-table-column>\r\n      </el-table>\r\n    </el-col>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { saveAs } from 'file-saver'\r\nimport FileSaver from 'file-saver'\r\nimport { write, utils } from 'xlsx';\r\nimport { chatgpt } from \"@/api/chatgpt\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      textarea: '',\r\n      input: '',\r\n      result: '',\r\n      stage: false,\r\n      visible: false,\r\n      fileList: '',\r\n      tableData: [],\r\n      loading: false,\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    //导出excel\r\n    handleDownload(name) {\r\n      let table = document.getElementById(\"excel_table\")\r\n      let et = utils.table_to_book(table)\r\n      let output = write(et, {\r\n        bookType: \"xlsx\",\r\n        bookSST: true,\r\n        type: \"array\"\r\n      })\r\n\r\n      try {\r\n        FileSaver.saveAs(new Blob([output], { type: \"application/octet-stream\" }), `${name}.xlsx`)\r\n      } catch (e) { }\r\n\r\n      return output\r\n    },\r\n    async errorCorrect() {\r\n      var that = this\r\n      that.loading = true\r\n      var context = that.textarea\r\n      var key = that.input\r\n      if (context === '' || key === '') {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '输入内容不能为空',\r\n          type: 'warning'\r\n        })\r\n        that.result = ''\r\n        that.visible = false\r\n      } else {\r\n        console.log(context)\r\n        const response = await chatgpt(context, key);\r\n        console.log(response)\r\n        this.tableData = response\r\n        this.loading = false\r\n      }\r\n    },\r\n    saveResult() {\r\n      var tempData = this.result\r\n      if (tempData === '') {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '输入内容为空！',\r\n          type: 'warning'\r\n        })\r\n      } else {\r\n        var tempResult = new Blob([tempData], { type: 'text/plain;charset=utf-8' })\r\n        saveAs(tempResult, 'ChatGPT结果.txt')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.tip {\r\n  font-family: Helvetica Neue, Arial, Helvetica, sans-serif;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"]}]}