{"remainingRequest":"D:\\MLAIII\\MLAI\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MLAIII\\MLAI\\frontend\\src\\views\\imagecreate\\index.vue?vue&type=style&index=0&id=03b05730&scoped=true&lang=css&","dependencies":[{"path":"D:\\MLAIII\\MLAI\\frontend\\src\\views\\imagecreate\\index.vue","mtime":1679473348982},{"path":"D:\\MLAIII\\MLAI\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1678687253994},{"path":"D:\\MLAIII\\MLAI\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1678687258269},{"path":"D:\\MLAIII\\MLAI\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1678687255543},{"path":"D:\\MLAIII\\MLAI\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678687252373},{"path":"D:\\MLAIII\\MLAI\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1678687256835}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoudGlwIHsNCiAgZm9udC1mYW1pbHk6IEhlbHZldGljYSBOZXVlLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOw0KICBmb250LXNpemU6IDE0cHg7DQogIGZvbnQtd2VpZ2h0OiBub3JtYWw7DQogIG1hcmdpbi10b3A6IDEwcHg7DQogIG1hcmdpbi1ib3R0b206IDEwcHg7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAiKA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/imagecreate","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-col :span=\"12\">\r\n      <div class=\"tip\">请输入提示语句:</div>\r\n      <el-input\r\n        v-model=\"input\"\r\n        type=\"input\"\r\n        :disabled=\"stage\"\r\n        :rows=\"11\"\r\n        placeholder=\"请输入\"\r\n        clearable\r\n      />\r\n      <div style=\"padding-top: 10px; padding-bottom: 10px\">\r\n        <el-button type=\"primary\" @click=\"errorCorrect()\" :loading=\"loading\"\r\n          >开始创作</el-button\r\n        >\r\n        <el-button\r\n          type=\"basic\"\r\n          style=\"margin-left: 24px; margin-top: 16px\"\r\n          @click=\"handleDownload('text-demo')\"\r\n          >导出图片</el-button\r\n        >\r\n      </div>\r\n      <el-image style=\"padding-left: 48px\" :src=\"imageUrl\" >\r\n        <template #error>\r\n          <div class=\"image-slot\">\r\n            <el-icon><icon-picture /></el-icon>\r\n          </div>\r\n        </template>\r\n      </el-image>\r\n    </el-col>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { saveAs } from \"file-saver\";\r\nimport FileSaver from \"file-saver\";\r\nimport { write, utils } from \"xlsx\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      textarea: \"\",\r\n      input: \"\",\r\n      result: \"\",\r\n      stage: false,\r\n      visible: false,\r\n      imageUrl: '',\r\n      fileList: \"\",\r\n      tableData: [],\r\n      loading: false,\r\n    };\r\n  },\r\n  methods: {\r\n    //导出excel\r\n    handleDownload(name) {\r\n      let table = document.getElementById(\"excel_table\");\r\n      let et = utils.table_to_book(table);\r\n      let output = write(et, {\r\n        bookType: \"xlsx\",\r\n        bookSST: true,\r\n        type: \"array\",\r\n      });\r\n\r\n      try {\r\n        FileSaver.saveAs(\r\n          new Blob([output], { type: \"application/octet-stream\" }),\r\n          `${name}.xlsx`\r\n        );\r\n      } catch (e) {}\r\n\r\n      return output;\r\n    },\r\n    errorCorrect() {\r\n      var that = this;\r\n      that.loading = true;\r\n      var key = that.input;\r\n      console.log(key)\r\n      if (key === \"\") {\r\n        this.$message({\r\n          showClose: true,\r\n          message: \"输入内容不能为空\",\r\n          type: \"warning\",\r\n        });\r\n        that.result = \"\";\r\n        that.visible = false;\r\n      } else {\r\n        // 请求后端API服务，请求方法为post，请求体字段为json格式 text\r\n        axios\r\n          .post(\"http://127.0.0.1:8000/v1/imageCreate\", {\r\n            text: that.input, \r\n            key: that.input\r\n\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n            that.imageUrl = response.data.correctionResults\r\n            console.log(that.imageUrl)\r\n            that.visible = true;\r\n            that.loading = false;\r\n            that.$message({\r\n              showClose: true,\r\n              message: \"Success！\",\r\n              type: \"success\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            that.result = \"\";\r\n            that.visible = false;\r\n            that.$message({\r\n              showClose: true,\r\n              message: \"请求出现异常！\",\r\n              type: \"error\",\r\n            });\r\n          });\r\n      }\r\n    },\r\n    beforeUpload(file) {\r\n      this.fileList = [file];\r\n      // 读取txt文件\r\n      this.read(file);\r\n      this.$message({\r\n        showClose: true,\r\n        message: \"txt文本内容导入成功！\",\r\n        type: \"success\",\r\n      });\r\n      return false;\r\n    },\r\n    read(f) {\r\n      const rd = new FileReader();\r\n      var that = this;\r\n      rd.onload = (e) => {\r\n        // this.readAsArrayBuffer函数内，会回调this.onload函数。在这里处理结果\r\n        const cont = rd.reading({ encode: \"UTF-8\" });\r\n        console.log(cont);\r\n        that.textarea = cont;\r\n      };\r\n      rd.readAsBinaryString(f);\r\n    },\r\n    saveResult() {\r\n      var tempData = this.result;\r\n      if (tempData === \"\") {\r\n        this.$message({\r\n          showClose: true,\r\n          message: \"输入内容为空！\",\r\n          type: \"warning\",\r\n        });\r\n      } else {\r\n        var tempResult = new Blob([tempData], {\r\n          type: \"text/plain;charset=utf-8\",\r\n        });\r\n        saveAs(tempResult, \"ChatGPT结果.txt\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tip {\r\n  font-family: Helvetica Neue, Arial, Helvetica, sans-serif;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"]}]}