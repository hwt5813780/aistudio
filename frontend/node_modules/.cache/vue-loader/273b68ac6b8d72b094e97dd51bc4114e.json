{"remainingRequest":"D:\\MLAIII\\MLAI\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MLAIII\\MLAI\\frontend\\src\\views\\imagecreate\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\MLAIII\\MLAI\\frontend\\src\\views\\imagecreate\\index.vue","mtime":1679473348982},{"path":"D:\\MLAIII\\MLAI\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678687252373},{"path":"D:\\MLAIII\\MLAI\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1678687255549},{"path":"D:\\MLAIII\\MLAI\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678687252373},{"path":"D:\\MLAIII\\MLAI\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1678687256835}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOw0KaW1wb3J0IHsgc2F2ZUFzIH0gZnJvbSAiZmlsZS1zYXZlciI7DQppbXBvcnQgRmlsZVNhdmVyIGZyb20gImZpbGUtc2F2ZXIiOw0KaW1wb3J0IHsgd3JpdGUsIHV0aWxzIH0gZnJvbSAieGxzeCI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdGV4dGFyZWE6ICIiLA0KICAgICAgaW5wdXQ6ICIiLA0KICAgICAgcmVzdWx0OiAiIiwNCiAgICAgIHN0YWdlOiBmYWxzZSwNCiAgICAgIHZpc2libGU6IGZhbHNlLA0KICAgICAgaW1hZ2VVcmw6ICcnLA0KICAgICAgZmlsZUxpc3Q6ICIiLA0KICAgICAgdGFibGVEYXRhOiBbXSwNCiAgICAgIGxvYWRpbmc6IGZhbHNlLA0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAvL+WvvOWHumV4Y2VsDQogICAgaGFuZGxlRG93bmxvYWQobmFtZSkgew0KICAgICAgbGV0IHRhYmxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImV4Y2VsX3RhYmxlIik7DQogICAgICBsZXQgZXQgPSB1dGlscy50YWJsZV90b19ib29rKHRhYmxlKTsNCiAgICAgIGxldCBvdXRwdXQgPSB3cml0ZShldCwgew0KICAgICAgICBib29rVHlwZTogInhsc3giLA0KICAgICAgICBib29rU1NUOiB0cnVlLA0KICAgICAgICB0eXBlOiAiYXJyYXkiLA0KICAgICAgfSk7DQoNCiAgICAgIHRyeSB7DQogICAgICAgIEZpbGVTYXZlci5zYXZlQXMoDQogICAgICAgICAgbmV3IEJsb2IoW291dHB1dF0sIHsgdHlwZTogImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSIgfSksDQogICAgICAgICAgYCR7bmFtZX0ueGxzeGANCiAgICAgICAgKTsNCiAgICAgIH0gY2F0Y2ggKGUpIHt9DQoNCiAgICAgIHJldHVybiBvdXRwdXQ7DQogICAgfSwNCiAgICBlcnJvckNvcnJlY3QoKSB7DQogICAgICB2YXIgdGhhdCA9IHRoaXM7DQogICAgICB0aGF0LmxvYWRpbmcgPSB0cnVlOw0KICAgICAgdmFyIGtleSA9IHRoYXQuaW5wdXQ7DQogICAgICBjb25zb2xlLmxvZyhrZXkpDQogICAgICBpZiAoa2V5ID09PSAiIikgew0KICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsDQogICAgICAgICAgbWVzc2FnZTogIui+k+WFpeWGheWuueS4jeiDveS4uuepuiIsDQogICAgICAgICAgdHlwZTogIndhcm5pbmciLA0KICAgICAgICB9KTsNCiAgICAgICAgdGhhdC5yZXN1bHQgPSAiIjsNCiAgICAgICAgdGhhdC52aXNpYmxlID0gZmFsc2U7DQogICAgICB9IGVsc2Ugew0KICAgICAgICAvLyDor7fmsYLlkI7nq69BUEnmnI3liqHvvIzor7fmsYLmlrnms5XkuLpwb3N077yM6K+35rGC5L2T5a2X5q615Li6anNvbuagvOW8jyB0ZXh0DQogICAgICAgIGF4aW9zDQogICAgICAgICAgLnBvc3QoImh0dHA6Ly8xMjcuMC4wLjE6ODAwMC92MS9pbWFnZUNyZWF0ZSIsIHsNCiAgICAgICAgICAgIHRleHQ6IHRoYXQuaW5wdXQsIA0KICAgICAgICAgICAga2V5OiB0aGF0LmlucHV0DQoNCiAgICAgICAgICB9KQ0KICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gew0KICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOw0KICAgICAgICAgICAgdGhhdC5pbWFnZVVybCA9IHJlc3BvbnNlLmRhdGEuY29ycmVjdGlvblJlc3VsdHMNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoYXQuaW1hZ2VVcmwpDQogICAgICAgICAgICB0aGF0LnZpc2libGUgPSB0cnVlOw0KICAgICAgICAgICAgdGhhdC5sb2FkaW5nID0gZmFsc2U7DQogICAgICAgICAgICB0aGF0LiRtZXNzYWdlKHsNCiAgICAgICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLA0KICAgICAgICAgICAgICBtZXNzYWdlOiAiU3VjY2Vzc++8gSIsDQogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgIH0pDQogICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gew0KICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOw0KICAgICAgICAgICAgdGhhdC5yZXN1bHQgPSAiIjsNCiAgICAgICAgICAgIHRoYXQudmlzaWJsZSA9IGZhbHNlOw0KICAgICAgICAgICAgdGhhdC4kbWVzc2FnZSh7DQogICAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwNCiAgICAgICAgICAgICAgbWVzc2FnZTogIuivt+axguWHuueOsOW8guW4uO+8gSIsDQogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsDQogICAgICAgICAgICB9KTsNCiAgICAgICAgICB9KTsNCiAgICAgIH0NCiAgICB9LA0KICAgIGJlZm9yZVVwbG9hZChmaWxlKSB7DQogICAgICB0aGlzLmZpbGVMaXN0ID0gW2ZpbGVdOw0KICAgICAgLy8g6K+75Y+WdHh05paH5Lu2DQogICAgICB0aGlzLnJlYWQoZmlsZSk7DQogICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLA0KICAgICAgICBtZXNzYWdlOiAidHh05paH5pys5YaF5a655a+85YWl5oiQ5Yqf77yBIiwNCiAgICAgICAgdHlwZTogInN1Y2Nlc3MiLA0KICAgICAgfSk7DQogICAgICByZXR1cm4gZmFsc2U7DQogICAgfSwNCiAgICByZWFkKGYpIHsNCiAgICAgIGNvbnN0IHJkID0gbmV3IEZpbGVSZWFkZXIoKTsNCiAgICAgIHZhciB0aGF0ID0gdGhpczsNCiAgICAgIHJkLm9ubG9hZCA9IChlKSA9PiB7DQogICAgICAgIC8vIHRoaXMucmVhZEFzQXJyYXlCdWZmZXLlh73mlbDlhoXvvIzkvJrlm57osIN0aGlzLm9ubG9hZOWHveaVsOOAguWcqOi/memHjOWkhOeQhue7k+aenA0KICAgICAgICBjb25zdCBjb250ID0gcmQucmVhZGluZyh7IGVuY29kZTogIlVURi04IiB9KTsNCiAgICAgICAgY29uc29sZS5sb2coY29udCk7DQogICAgICAgIHRoYXQudGV4dGFyZWEgPSBjb250Ow0KICAgICAgfTsNCiAgICAgIHJkLnJlYWRBc0JpbmFyeVN0cmluZyhmKTsNCiAgICB9LA0KICAgIHNhdmVSZXN1bHQoKSB7DQogICAgICB2YXIgdGVtcERhdGEgPSB0aGlzLnJlc3VsdDsNCiAgICAgIGlmICh0ZW1wRGF0YSA9PT0gIiIpIHsNCiAgICAgICAgdGhpcy4kbWVzc2FnZSh7DQogICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLA0KICAgICAgICAgIG1lc3NhZ2U6ICLovpPlhaXlhoXlrrnkuLrnqbrvvIEiLA0KICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwNCiAgICAgICAgfSk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICB2YXIgdGVtcFJlc3VsdCA9IG5ldyBCbG9iKFt0ZW1wRGF0YV0sIHsNCiAgICAgICAgICB0eXBlOiAidGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04IiwNCiAgICAgICAgfSk7DQogICAgICAgIHNhdmVBcyh0ZW1wUmVzdWx0LCAiQ2hhdEdQVOe7k+aenC50eHQiKTsNCiAgICAgIH0NCiAgICB9LA0KICB9LA0KfTsNCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAmfile":"index.vue","sourceRoot":"src/views/imagecreate","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-col :span=\"12\">\r\n      <div class=\"tip\">请输入提示语句:</div>\r\n      <el-input\r\n        v-model=\"input\"\r\n        type=\"input\"\r\n        :disabled=\"stage\"\r\n        :rows=\"11\"\r\n        placeholder=\"请输入\"\r\n        clearable\r\n      />\r\n      <div style=\"padding-top: 10px; padding-bottom: 10px\">\r\n        <el-button type=\"primary\" @click=\"errorCorrect()\" :loading=\"loading\"\r\n          >开始创作</el-button\r\n        >\r\n        <el-button\r\n          type=\"basic\"\r\n          style=\"margin-left: 24px; margin-top: 16px\"\r\n          @click=\"handleDownload('text-demo')\"\r\n          >导出图片</el-button\r\n        >\r\n      </div>\r\n      <el-image style=\"padding-left: 48px\" :src=\"imageUrl\" >\r\n        <template #error>\r\n          <div class=\"image-slot\">\r\n            <el-icon><icon-picture /></el-icon>\r\n          </div>\r\n        </template>\r\n      </el-image>\r\n    </el-col>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { saveAs } from \"file-saver\";\r\nimport FileSaver from \"file-saver\";\r\nimport { write, utils } from \"xlsx\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      textarea: \"\",\r\n      input: \"\",\r\n      result: \"\",\r\n      stage: false,\r\n      visible: false,\r\n      imageUrl: '',\r\n      fileList: \"\",\r\n      tableData: [],\r\n      loading: false,\r\n    };\r\n  },\r\n  methods: {\r\n    //导出excel\r\n    handleDownload(name) {\r\n      let table = document.getElementById(\"excel_table\");\r\n      let et = utils.table_to_book(table);\r\n      let output = write(et, {\r\n        bookType: \"xlsx\",\r\n        bookSST: true,\r\n        type: \"array\",\r\n      });\r\n\r\n      try {\r\n        FileSaver.saveAs(\r\n          new Blob([output], { type: \"application/octet-stream\" }),\r\n          `${name}.xlsx`\r\n        );\r\n      } catch (e) {}\r\n\r\n      return output;\r\n    },\r\n    errorCorrect() {\r\n      var that = this;\r\n      that.loading = true;\r\n      var key = that.input;\r\n      console.log(key)\r\n      if (key === \"\") {\r\n        this.$message({\r\n          showClose: true,\r\n          message: \"输入内容不能为空\",\r\n          type: \"warning\",\r\n        });\r\n        that.result = \"\";\r\n        that.visible = false;\r\n      } else {\r\n        // 请求后端API服务，请求方法为post，请求体字段为json格式 text\r\n        axios\r\n          .post(\"http://127.0.0.1:8000/v1/imageCreate\", {\r\n            text: that.input, \r\n            key: that.input\r\n\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n            that.imageUrl = response.data.correctionResults\r\n            console.log(that.imageUrl)\r\n            that.visible = true;\r\n            that.loading = false;\r\n            that.$message({\r\n              showClose: true,\r\n              message: \"Success！\",\r\n              type: \"success\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            that.result = \"\";\r\n            that.visible = false;\r\n            that.$message({\r\n              showClose: true,\r\n              message: \"请求出现异常！\",\r\n              type: \"error\",\r\n            });\r\n          });\r\n      }\r\n    },\r\n    beforeUpload(file) {\r\n      this.fileList = [file];\r\n      // 读取txt文件\r\n      this.read(file);\r\n      this.$message({\r\n        showClose: true,\r\n        message: \"txt文本内容导入成功！\",\r\n        type: \"success\",\r\n      });\r\n      return false;\r\n    },\r\n    read(f) {\r\n      const rd = new FileReader();\r\n      var that = this;\r\n      rd.onload = (e) => {\r\n        // this.readAsArrayBuffer函数内，会回调this.onload函数。在这里处理结果\r\n        const cont = rd.reading({ encode: \"UTF-8\" });\r\n        console.log(cont);\r\n        that.textarea = cont;\r\n      };\r\n      rd.readAsBinaryString(f);\r\n    },\r\n    saveResult() {\r\n      var tempData = this.result;\r\n      if (tempData === \"\") {\r\n        this.$message({\r\n          showClose: true,\r\n          message: \"输入内容为空！\",\r\n          type: \"warning\",\r\n        });\r\n      } else {\r\n        var tempResult = new Blob([tempData], {\r\n          type: \"text/plain;charset=utf-8\",\r\n        });\r\n        saveAs(tempResult, \"ChatGPT结果.txt\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tip {\r\n  font-family: Helvetica Neue, Arial, Helvetica, sans-serif;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"]}]}