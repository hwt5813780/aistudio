{"remainingRequest":"D:\\ML-AI\\mlainew\\newone\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ML-AI\\mlainew\\newone\\src\\views\\imagecsc\\index.vue?vue&type=style&index=0&id=22b7d9d5&scoped=true&lang=css&","dependencies":[{"path":"D:\\ML-AI\\mlainew\\newone\\src\\views\\imagecsc\\index.vue","mtime":1678763508855},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\css-loader\\dist\\cjs.js","mtime":1678687253994},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1678687258269},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\postcss-loader\\src\\index.js","mtime":1678687255543},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678687252373},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\vue-loader\\lib\\index.js","mtime":1678687256835}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoudGlwIHsNCiAgZm9udC1mYW1pbHk6IEhlbHZldGljYSBOZXVlLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOw0KICBmb250LXNpemU6IDE0cHg7DQogIGZvbnQtd2VpZ2h0OiBub3JtYWw7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQogIG1hcmdpbi1ib3R0b206IDEwcHg7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA8PA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/imagecsc","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-col :span=\"12\">\r\n      <el-row>\r\n        <div class=\"tip\">请上传要提取的图片</div>\r\n        <el-upload\r\n          class=\"upload-demo\"\r\n          action=\"\"\r\n          :limit=\"10\"\r\n          :http-request=\"uploadImg\"\r\n          accept=\".jpg,.jpeg,.png,.bmp\"\r\n          style=\"padding-bottom: 24px\"\r\n        >\r\n          <el-button type=\"primary\">点击上传</el-button>\r\n        </el-upload>\r\n      </el-row>\r\n      <el-row>\r\n        <div class=\"tip\">\r\n          请输入需要提取的信息（中文逗号隔开，尽可能描述准确）\r\n        </div>\r\n        <el-input\r\n          v-model=\"input\"\r\n          type=\"input\"\r\n          :rows=\"8\"\r\n          style=\"padding-bottom: 10px\"\r\n        />\r\n      </el-row>\r\n      <el-row style=\"padding-top: 10px; padding-bottom: 30px\">\r\n        <div class=\"tip\">模型选择</div>\r\n        <el-select\r\n          v-model=\"value\"\r\n          class=\"m-2\"\r\n          placeholder=\"Select\"\r\n          size=\"large\"\r\n          style=\"padding-right: 24px\"\r\n        >\r\n          <el-option\r\n            v-for=\"item in options\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\"\r\n          />\r\n        </el-select>\r\n        <el-button type=\"primary\" :loading=\"loading\" @click=\"imageCorrect()\"\r\n          >开始提取</el-button\r\n        >\r\n        <el-button type=\"basic\" @click=\"handleDownload('demo')\"\r\n          >导出Excel</el-button\r\n        >\r\n      </el-row>\r\n      <div v-show=\"visible\" class=\"tip\">图片识别和识别结果：</div>\r\n      <el-table\r\n        v-loading=\"loading\"\r\n        id=\"excel_table\"\r\n        :data=\"tableData\"\r\n        style=\"width: 100%\"\r\n      >\r\n        <el-table-column prop=\"prompt\" label=\"Prompt\"></el-table-column>\r\n        <el-table-column prop=\"value\" label=\"Value\"></el-table-column>\r\n      </el-table>\r\n    </el-col>\r\n    <el-col :span=\"10\">\r\n      <div class=\"demo-image__error\" style=\"text-align: center\">\r\n        <div class=\"block\" style=\"padding-top: 24px; padding-bottom: 10px\">\r\n          <span class=\"demonstration\"></span>\r\n        </div>\r\n        <el-image style=\"padding-left: 48px\" :src=\"imageUrl\" :fit=\"fit\">\r\n          <template #error>\r\n            <div class=\"image-slot\">\r\n              <el-icon><icon-picture /></el-icon>\r\n            </div>\r\n          </template>\r\n        </el-image>\r\n      </div>\r\n    </el-col>\r\n  </div>\r\n</template>\r\n\r\n<script >\r\nimport axios from \"axios\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { ref } from \"vue\";\r\nimport FileSaver from \"file-saver\";\r\nimport { write, utils } from \"xlsx\";\r\nimport { ocr } from \"@/api/TextIn\";\r\nimport { chatgpt } from \"@/api/chatgpt\";\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      fileData: \"\",\r\n      a: \"1\",\r\n      input: \"\",\r\n      visible: false,\r\n      tableData: [],\r\n      textforgpt:'',\r\n      imageUrl: \"\",\r\n      fit: \"cover\",\r\n      loading: false,\r\n      value: ref(1),\r\n      options: [\r\n        {\r\n          value: 1,\r\n          label: \"gpt-3.5-turbo\",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n\r\n  beforeCreate() {\r\n    // 读取文件\r\n    FileReader.prototype.reading = function ({ encode } = \"pms\") {\r\n      const bytes = new Uint8Array(this.result); // 无符号整型数组\r\n      const text = new TextDecoder(encode || \"UTF-8\").decode(bytes);\r\n      return text;\r\n    };\r\n    /* 重写readAsBinaryString函数 */\r\n    FileReader.prototype.readAsBinaryString = function (f) {\r\n      // 如果this未重写onload函数，则创建一个公共处理方式\r\n      if (!this.onload) {\r\n        this.onload = (e) => {\r\n          // 在this.onload函数中，完成公共处理\r\n          const rs = this.reading();\r\n          console.log(rs);\r\n        };\r\n      }\r\n      this.readAsArrayBuffer(f); // 内部会回调this.onload方法\r\n    };\r\n  },\r\n  methods: {\r\n    handleDownload(name) {\r\n      let table = document.getElementById(\"excel_table\");\r\n      let et = utils.table_to_book(table);\r\n      let output = write(et, {\r\n        bookType: \"xlsx\",\r\n        bookSST: true,\r\n        type: \"array\",\r\n      });\r\n\r\n      try {\r\n        FileSaver.saveAs(\r\n          new Blob([output], { type: \"application/octet-stream\" }),\r\n          `${name}.xlsx`\r\n        );\r\n      } catch (e) {}\r\n\r\n      return output;\r\n    },\r\n\r\n    // 储存选择的file文件\r\n    uploadImg(file) {\r\n      var that = this;\r\n      this.fileData = file.file;\r\n      console.log(file.file);\r\n      this.$message({\r\n        showClose: true,\r\n        message: \"图片上传成功！\",\r\n        type: \"success\",\r\n      });\r\n      this.imageUrl = URL.createObjectURL(file.file);\r\n      console.log(this.fileData);\r\n      var reader = new FileReader();\r\n      reader.readAsArrayBuffer(this.fileData); // 读取成二进制\r\n      console.log(reader);\r\n      reader.onload = function (e) {\r\n        var fileData = this.result;\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        // --------------------------------------------------------------------\r\n        // 特别注意\r\n        // --------------------------------------------------------------------\r\n        // 在客户端/浏览器端储存 x-ti-app-id 和 x-ti-secret-code 是一件风险极大的事情\r\n        // 极易造成 x-ti-app-id 和 x-ti-secret-code 的泄露。\r\n        // 非特殊情况，请勿在客户端/浏览器存储 x-ti-app-id 和 x-ti-secret-code\r\n        // 本示例代码仅供演示参考，请勿直接用于生产环境。\r\n\r\n        // 请登录后前往 “工作台-账号设置-开发者信息” 查看 x-ti-app-id\r\n        // 示例代码中 x-ti-app-id 非真实数据\r\n        var appId = \"0647cbe4b4b53e45ce1386c673207f69\";\r\n        // 请登录后前往 “工作台-账号设置-开发者信息” 查看 x-ti-secret-code\r\n        // 示例代码中 x-ti-secret-code 非真实数据\r\n        var secretCode = \"0bf8e7c1eef74806987e4c5c5fe3615a\";\r\n        // 通用文字识别 服务URL\r\n        var url = \"https://api.textin.com/ai/service/v2/recognize\";\r\n\r\n        xhr.open(\"POST\", url);\r\n        xhr.setRequestHeader(\"x-ti-app-id\", appId);\r\n        xhr.setRequestHeader(\"x-ti-secret-code\", secretCode);\r\n        xhr.onreadystatechange = function () {\r\n          if (xhr.readyState === 4) {\r\n            xhr.onreadystatechange = null;\r\n            var response = xhr.response;\r\n            var obj = {};\r\n            try {\r\n              obj = JSON.parse(response); // 转化为对象\r\n              console.log(response);\r\n              let textString = \"\";\r\n              console.log(textString);\r\n                for (let j = 0; j < obj.result.lines.length; j++) {\r\n                  textString += obj.result.lines[j].text + ' ';\r\n              }\r\n              console.log(textString);\r\n              that.textforgpt = textString;\r\n              console.log(that.textforgpt);\r\n              this.a=\"2\"\r\n              \r\n            } catch (e) {}\r\n          }\r\n        };\r\n        xhr.send(fileData);\r\n      };\r\n    },\r\n    // 保存识别结果\r\n    saveResult() {\r\n      // console.log(this.fileList)\r\n      var tempData = this.imgCscResult;\r\n      if (tempData === \"\") {\r\n        this.$message({\r\n          showClose: true,\r\n          message: \"识别结果内容为空！\",\r\n          type: \"warning\",\r\n        });\r\n      } else {\r\n        var tempResult = new Blob([tempData], {\r\n          type: \"text/plain;charset=utf-8\",\r\n        });\r\n        saveAs(tempResult, \"图片识别结果.txt\");\r\n      }\r\n    },\r\n    async imageCorrect() {\r\n      var that = this;\r\n      that.loading = true;\r\n      if (that.fileData === \"\") {\r\n        this.$message({\r\n          showClose: true,\r\n          message: \"请先选择要进行识别的图片文件！\",\r\n          type: \"warning\",\r\n        });\r\n        that.imgCscResult = \"\";\r\n        that.visible = false;\r\n        return;\r\n      }\r\n      const response = await chatgpt(that.textforgpt, that.input);\r\n      console.log(that.textforgpt);\r\n      console.log(that.input);\r\n      this.tableData = response;\r\n      this.loading = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tip {\r\n  font-family: Helvetica Neue, Arial, Helvetica, sans-serif;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n  margin-bottom: 20px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"]}]}