{"remainingRequest":"D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\src\\views\\imageocr\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\src\\views\\imageocr\\index.vue","mtime":1681779815669},{"path":"D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\fastapi-skeleton\\fastapi-skeleton-master\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnDQppbXBvcnQgeyBzYXZlQXMgfSBmcm9tICdmaWxlLXNhdmVyJw0KaW1wb3J0IHsgcmVmIH0gZnJvbSAndnVlJw0KaW1wb3J0IEZpbGVTYXZlciBmcm9tICdmaWxlLXNhdmVyJw0KaW1wb3J0IHsgd3JpdGUsIHV0aWxzIH0gZnJvbSAneGxzeCc7DQoNCg0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGZpbGVEYXRhOiAnJywNCiAgICAgIGlucHV0OiAnJywNCiAgICAgIHZpc2libGU6IGZhbHNlLA0KICAgICAgdGV4dGFyZWE6JycsDQogICAgICBpbWFnZVVybDogJ2h0dHBzOi8vczEuYXgxeC5jb20vMjAyMy8wMy8wNy9wcFp0U2lULnBuZycsDQogICAgICBmaXQ6ICdjb3ZlcicsDQogICAgICBsb2FkaW5nOiBmYWxzZSwNCiAgICAgIHZhbHVlOiByZWYoMSksDQogICAgICBvcHRpb25zOiBbDQogICAgICAgIHsNCiAgICAgICAgICB2YWx1ZTogMSwNCiAgICAgICAgICBsYWJlbDogJ0VSTklFLTMuMCcsDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICB2YWx1ZTogMiwNCiAgICAgICAgICBsYWJlbDogJ2dwdC0zLjUtdHVyYm8nLA0KICAgICAgICB9DQogICAgICBdDQogICAgfQ0KICB9LA0KDQogIGJlZm9yZUNyZWF0ZSgpIHsNCiAgICAvLyDor7vlj5bmlofku7YNCiAgICBGaWxlUmVhZGVyLnByb3RvdHlwZS5yZWFkaW5nID0gZnVuY3Rpb24gKHsgZW5jb2RlIH0gPSAncG1zJykgew0KICAgICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheSh0aGlzLnJlc3VsdCkgLy8g5peg56ym5Y+35pW05Z6L5pWw57uEDQogICAgICBjb25zdCB0ZXh0ID0gbmV3IFRleHREZWNvZGVyKGVuY29kZSB8fCAnVVRGLTgnKS5kZWNvZGUoYnl0ZXMpDQogICAgICByZXR1cm4gdGV4dA0KICAgIH0NCiAgICAvKiDph43lhplyZWFkQXNCaW5hcnlTdHJpbmflh73mlbAgKi8NCiAgICBGaWxlUmVhZGVyLnByb3RvdHlwZS5yZWFkQXNCaW5hcnlTdHJpbmcgPSBmdW5jdGlvbiAoZikgew0KICAgICAgLy8g5aaC5p6cdGhpc+acqumHjeWGmW9ubG9hZOWHveaVsO+8jOWImeWIm+W7uuS4gOS4quWFrOWFseWkhOeQhuaWueW8jw0KICAgICAgaWYgKCF0aGlzLm9ubG9hZCkgew0KICAgICAgICB0aGlzLm9ubG9hZCA9IGUgPT4geyAvLyDlnKh0aGlzLm9ubG9hZOWHveaVsOS4re+8jOWujOaIkOWFrOWFseWkhOeQhg0KICAgICAgICAgIGNvbnN0IHJzID0gdGhpcy5yZWFkaW5nKCkNCiAgICAgICAgICBjb25zb2xlLmxvZyhycykNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgdGhpcy5yZWFkQXNBcnJheUJ1ZmZlcihmKSAvLyDlhoXpg6jkvJrlm57osIN0aGlzLm9ubG9hZOaWueazlQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KDQogICAgaGFuZGxlRG93bmxvYWQobmFtZSkgew0KICAgICAgbGV0IHRhYmxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImV4Y2VsX3RhYmxlIikNCiAgICAgIGxldCBldCA9IHV0aWxzLnRhYmxlX3RvX2Jvb2sodGFibGUpDQogICAgICBsZXQgb3V0cHV0ID0gd3JpdGUoZXQsIHsNCiAgICAgICAgYm9va1R5cGU6ICJ4bHN4IiwNCiAgICAgICAgYm9va1NTVDogdHJ1ZSwNCiAgICAgICAgdHlwZTogImFycmF5Ig0KICAgICAgfSkNCg0KICAgICAgdHJ5IHsNCiAgICAgICAgRmlsZVNhdmVyLnNhdmVBcyhuZXcgQmxvYihbb3V0cHV0XSwgeyB0eXBlOiAiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtIiB9KSwgYCR7bmFtZX0ueGxzeGApDQogICAgICB9IGNhdGNoIChlKSB7IH0NCg0KICAgICAgcmV0dXJuIG91dHB1dA0KICAgIH0sDQoNCg0KICAgIC8vIOWCqOWtmOmAieaLqeeahGZpbGXmlofku7YNCiAgICB1cGxvYWRJbWcoZmlsZSkgew0KICAgICAgdGhpcy5maWxlRGF0YSA9IGZpbGUuZmlsZQ0KICAgICAgY29uc29sZS5sb2codGhpcy5maWxlRGF0YSkNCiAgICAgIHRoaXMuJG1lc3NhZ2Uoew0KICAgICAgICBzaG93Q2xvc2U6IHRydWUsDQogICAgICAgIG1lc3NhZ2U6ICflm77niYfkuIrkvKDmiJDlip/vvIEnLA0KICAgICAgICB0eXBlOiAnc3VjY2VzcycNCiAgICAgIH0pDQogICAgICB0aGlzLmltYWdlVXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlLmZpbGUpDQogICAgICBjb25zb2xlLmxvZyh0aGlzLmltYWdlVXJsKQ0KICAgICAgDQogICAgfSwNCiAgICAvLyDkv53lrZjor4bliKvnu5PmnpwNCiAgICBzYXZlUmVzdWx0KCkgew0KICAgICAgLy8gY29uc29sZS5sb2codGhpcy5maWxlTGlzdCkNCiAgICAgIHZhciB0ZW1wRGF0YSA9IHRoaXMuaW1nQ3NjUmVzdWx0DQogICAgICBpZiAodGVtcERhdGEgPT09ICcnKSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2Uoew0KICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwNCiAgICAgICAgICBtZXNzYWdlOiAn6K+G5Yir57uT5p6c5YaF5a655Li656m677yBJywNCiAgICAgICAgICB0eXBlOiAnd2FybmluZycNCiAgICAgICAgfSkNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHZhciB0ZW1wUmVzdWx0ID0gbmV3IEJsb2IoW3RlbXBEYXRhXSwgeyB0eXBlOiAndGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04JyB9KQ0KICAgICAgICBzYXZlQXModGVtcFJlc3VsdCwgJ+WbvueJh+ivhuWIq+e7k+aenC50eHQnKQ0KICAgICAgfQ0KICAgIH0sDQogICAgaW1hZ2VDb3JyZWN0KCkgew0KICAgICAgdmFyIHRoYXQgPSB0aGlzDQogICAgICB0aGF0LmxvYWRpbmcgPSB0cnVlDQogICAgICBpZiAodGhhdC5maWxlRGF0YSA9PT0gJycpIHsNCiAgICAgICAgdGhpcy4kbWVzc2FnZSh7DQogICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLA0KICAgICAgICAgIG1lc3NhZ2U6ICfor7flhYjpgInmi6nopoHov5vooYzor4bliKvnmoTlm77niYfmlofku7bvvIEnLA0KICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJw0KICAgICAgICB9KQ0KICAgICAgICB0aGF0LmltZ0NzY1Jlc3VsdCA9ICcnDQogICAgICAgIHRoYXQudmlzaWJsZSA9IGZhbHNlDQogICAgICAgIHJldHVybg0KICAgICAgfQ0KICAgICAgdmFyIGNvbmZpZyA9IHsNCiAgICAgICAgaGVhZGVyczogew0KICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgdmFyIGZvcm0gPSBuZXcgRm9ybURhdGEoKQ0KICAgICAgZm9ybS5hcHBlbmQoJ2ZpbGUnLCB0aGF0LmZpbGVEYXRhKQ0KICAgICAgLy8g6K+35rGC5ZCO56uvQVBJ5pyN5Yqh77yM6K+35rGC5pa55rOV5Li6cG9zdA0KICAgICAgYXhpb3MucG9zdCgnaHR0cDovLzE3Mi4yMS4xMDguNTc6ODAwMC9hcGkvb2NyL2NybicsIGZvcm0sIGNvbmZpZykudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpDQogICAgICAgIHRoYXQudGV4dGFyZWEgPSByZXNwb25zZS5kYXRhLmNvcnJlY3Rpb25SZXN1bHRzDQogICAgICAgIGNvbnNvbGUubG9nKHRoYXQudGV4dCkNCiAgICAgICAgdGhhdC52aXNpYmxlID0gdHJ1ZQ0KICAgICAgICB0aGF0LmxvYWRpbmcgPSBmYWxzZQ0KICAgICAgICB0aGF0LiRtZXNzYWdlKHsNCiAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsDQogICAgICAgICAgbWVzc2FnZTogJ+WbvueJh+ivhuWIq+WujOaIkO+8gScsDQogICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnDQogICAgICAgIH0pDQogICAgICB9KS5jYXRjaCgoZXJyb3IpID0+IHsNCiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpDQogICAgICAgIHRoYXQuaW1nQ3NjUmVzdWx0ID0gJycNCiAgICAgICAgdGhhdC52aXNpYmxlID0gZmFsc2UNCiAgICAgICAgdGhhdC4kbWVzc2FnZSh7DQogICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLA0KICAgICAgICAgIG1lc3NhZ2U6ICfor7fmsYLlh7rnjrDlvILluLjvvIEnLA0KICAgICAgICAgIHR5cGU6ICdlcnJvcicNCiAgICAgICAgfSkNCiAgICAgIH0pDQogICAgfQ0KICB9DQp9DQoNCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAyCA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/imageocr","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-col :span=\"12\">\r\n      <el-row>\r\n        <div class=\"tip\">\r\n          请上传要提取的图片\r\n        </div>\r\n        <el-upload class=\"upload-demo\" action=\"\" :limit=\"10\" :http-request=\"uploadImg\" accept=\".jpg,.jpeg,.png,.bmp\"\r\n          style=\"padding-bottom:24px;\">\r\n          <el-button type=\"primary\">点击上传</el-button>\r\n        </el-upload>\r\n      </el-row>\r\n\r\n      <el-row style=\"padding-top:10px;padding-bottom:30px;\">\r\n        <div class=\"tip\">\r\n          模型选择\r\n        </div>\r\n        <el-select v-model=\"value\" class=\"m-2\" placeholder=\"Select\" size=\"large\" style=\"padding-right:24px\">\r\n          <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n        </el-select>\r\n        <el-button type=\"primary\" :loading='loading'  @click=\"imageCorrect()\">开始识别</el-button>\r\n        <el-button type=\"basic\"  @click=\"handleDownload('demo')\">导出txt</el-button>\r\n      </el-row>\r\n      <div v-show=\"visible\" class=\"tip\">\r\n        图片识别和识别结果：\r\n      </div>\r\n      <el-input v-model=\"textarea\" type=\"textarea\" :disabled=\"stage\" :rows=\"11\" placeholder=\"\" clearable />\r\n    </el-col>\r\n    <el-col :span=\"10\">\r\n      <div class=\"demo-image__error\" style=\"text-align: center;\">\r\n        <div class=\"block\" style=\"padding-top:24px;padding-bottom:10px;\">\r\n          <span class=\"demonstration\"></span>\r\n        </div>\r\n        <el-image style=\"padding-left:48px;\" :src=\"imageUrl\">\r\n        </el-image>\r\n      </div>\r\n    </el-col>\r\n  </div>\r\n</template>\r\n\r\n<script >\r\nimport axios from 'axios'\r\nimport { saveAs } from 'file-saver'\r\nimport { ref } from 'vue'\r\nimport FileSaver from 'file-saver'\r\nimport { write, utils } from 'xlsx';\r\n\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      fileData: '',\r\n      input: '',\r\n      visible: false,\r\n      textarea:'',\r\n      imageUrl: 'https://s1.ax1x.com/2023/03/07/ppZtSiT.png',\r\n      fit: 'cover',\r\n      loading: false,\r\n      value: ref(1),\r\n      options: [\r\n        {\r\n          value: 1,\r\n          label: 'ERNIE-3.0',\r\n        },\r\n        {\r\n          value: 2,\r\n          label: 'gpt-3.5-turbo',\r\n        }\r\n      ]\r\n    }\r\n  },\r\n\r\n  beforeCreate() {\r\n    // 读取文件\r\n    FileReader.prototype.reading = function ({ encode } = 'pms') {\r\n      const bytes = new Uint8Array(this.result) // 无符号整型数组\r\n      const text = new TextDecoder(encode || 'UTF-8').decode(bytes)\r\n      return text\r\n    }\r\n    /* 重写readAsBinaryString函数 */\r\n    FileReader.prototype.readAsBinaryString = function (f) {\r\n      // 如果this未重写onload函数，则创建一个公共处理方式\r\n      if (!this.onload) {\r\n        this.onload = e => { // 在this.onload函数中，完成公共处理\r\n          const rs = this.reading()\r\n          console.log(rs)\r\n        }\r\n      }\r\n      this.readAsArrayBuffer(f) // 内部会回调this.onload方法\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    handleDownload(name) {\r\n      let table = document.getElementById(\"excel_table\")\r\n      let et = utils.table_to_book(table)\r\n      let output = write(et, {\r\n        bookType: \"xlsx\",\r\n        bookSST: true,\r\n        type: \"array\"\r\n      })\r\n\r\n      try {\r\n        FileSaver.saveAs(new Blob([output], { type: \"application/octet-stream\" }), `${name}.xlsx`)\r\n      } catch (e) { }\r\n\r\n      return output\r\n    },\r\n\r\n\r\n    // 储存选择的file文件\r\n    uploadImg(file) {\r\n      this.fileData = file.file\r\n      console.log(this.fileData)\r\n      this.$message({\r\n        showClose: true,\r\n        message: '图片上传成功！',\r\n        type: 'success'\r\n      })\r\n      this.imageUrl = URL.createObjectURL(file.file)\r\n      console.log(this.imageUrl)\r\n      \r\n    },\r\n    // 保存识别结果\r\n    saveResult() {\r\n      // console.log(this.fileList)\r\n      var tempData = this.imgCscResult\r\n      if (tempData === '') {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '识别结果内容为空！',\r\n          type: 'warning'\r\n        })\r\n      } else {\r\n        var tempResult = new Blob([tempData], { type: 'text/plain;charset=utf-8' })\r\n        saveAs(tempResult, '图片识别结果.txt')\r\n      }\r\n    },\r\n    imageCorrect() {\r\n      var that = this\r\n      that.loading = true\r\n      if (that.fileData === '') {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '请先选择要进行识别的图片文件！',\r\n          type: 'warning'\r\n        })\r\n        that.imgCscResult = ''\r\n        that.visible = false\r\n        return\r\n      }\r\n      var config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      }\r\n      var form = new FormData()\r\n      form.append('file', that.fileData)\r\n      // 请求后端API服务，请求方法为post\r\n      axios.post('http://172.21.108.57:8000/api/ocr/crn', form, config).then((response) => {\r\n        console.log(response)\r\n        that.textarea = response.data.correctionResults\r\n        console.log(that.text)\r\n        that.visible = true\r\n        that.loading = false\r\n        that.$message({\r\n          showClose: true,\r\n          message: '图片识别完成！',\r\n          type: 'success'\r\n        })\r\n      }).catch((error) => {\r\n        console.log(error)\r\n        that.imgCscResult = ''\r\n        that.visible = false\r\n        that.$message({\r\n          showClose: true,\r\n          message: '请求出现异常！',\r\n          type: 'error'\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.tip {\r\n  font-family: Helvetica Neue, Arial, Helvetica, sans-serif;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n  margin-bottom: 20px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"]}]}