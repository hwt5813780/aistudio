{"remainingRequest":"D:\\ML-AI\\mlainew\\newone\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ML-AI\\mlainew\\newone\\node_modules\\babel-loader\\lib\\index.js!D:\\ML-AI\\mlainew\\newone\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ML-AI\\mlainew\\newone\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ML-AI\\mlainew\\newone\\src\\views\\imagecsc\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ML-AI\\mlainew\\newone\\src\\views\\imagecsc\\index.vue","mtime":1678851026546},{"path":"D:\\ML-AI\\mlainew\\newone\\babel.config.js","mtime":1678687015691},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678687252373},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1678687252373},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\babel-loader\\lib\\index.js","mtime":1678687255549},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678687252373},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\vue-loader\\lib\\index.js","mtime":1678687256835}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}