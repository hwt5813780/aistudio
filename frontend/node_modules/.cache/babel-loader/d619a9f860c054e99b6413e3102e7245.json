{"remainingRequest":"D:\\ML-AI\\mlainew\\newone\\node_modules\\babel-loader\\lib\\index.js!D:\\ML-AI\\mlainew\\newone\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ML-AI\\mlainew\\newone\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ML-AI\\mlainew\\newone\\src\\views\\imagecsc\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ML-AI\\mlainew\\newone\\src\\views\\imagecsc\\index.vue","mtime":1678851026546},{"path":"D:\\ML-AI\\mlainew\\newone\\babel.config.js","mtime":1678687015691},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678687252373},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\babel-loader\\lib\\index.js","mtime":1678687255549},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678687252373},{"path":"D:\\ML-AI\\mlainew\\newone\\node_modules\\vue-loader\\lib\\index.js","mtime":1678687256835}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["axios","saveAs","ref","FileSaver","write","utils","ocr","chatgpt","data","fileData","a","input","visible","tableData","textforgpt","imageUrl","fit","loading","value","options","label","beforeCreate","FileReader","prototype","reading","_ref","arguments","length","undefined","encode","bytes","Uint8Array","result","text","TextDecoder","decode","readAsBinaryString","f","_this","onload","e","rs","console","log","readAsArrayBuffer","methods","handleDownload","name","table","document","getElementById","et","table_to_book","output","bookType","bookSST","type","Blob","concat","uploadImg","file","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","that","wrap","_callee$","_context","prev","next","$message","showClose","message","URL","createObjectURL","sent","stop","saveResult","tempData","imgCscResult","tempResult","imageCorrect","_this3","_callee2","response","_callee2$","_context2","abrupt"],"sources":["src/views/imagecsc/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-col :span=\"12\">\r\n      <el-row>\r\n        <div class=\"tip\">请上传要提取的图片</div>\r\n        <el-upload\r\n          class=\"upload-demo\"\r\n          action=\"\"\r\n          :limit=\"10\"\r\n          :http-request=\"uploadImg\"\r\n          accept=\".jpg,.jpeg,.png,.bmp\"\r\n          style=\"padding-bottom: 24px\"\r\n        >\r\n          <el-button type=\"primary\">点击上传</el-button>\r\n        </el-upload>\r\n      </el-row>\r\n      <el-row>\r\n        <div class=\"tip\">\r\n          请输入需要提取的信息（中文逗号隔开，尽可能描述准确）\r\n        </div>\r\n        <el-input\r\n          v-model=\"input\"\r\n          type=\"input\"\r\n          :rows=\"8\"\r\n          style=\"padding-bottom: 10px\"\r\n        />\r\n      </el-row>\r\n      <el-row style=\"padding-top: 10px; padding-bottom: 30px\">\r\n        <div class=\"tip\">模型选择</div>\r\n        <el-select\r\n          v-model=\"value\"\r\n          class=\"m-2\"\r\n          placeholder=\"Select\"\r\n          size=\"large\"\r\n          style=\"padding-right: 24px\"\r\n        >\r\n          <el-option\r\n            v-for=\"item in options\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\"\r\n          />\r\n        </el-select>\r\n        <el-button type=\"primary\" :loading=\"loading\" @click=\"imageCorrect()\"\r\n          >开始提取</el-button\r\n        >\r\n        <el-button type=\"basic\" @click=\"handleDownload('demo')\"\r\n          >导出Excel</el-button\r\n        >\r\n      </el-row>\r\n      <div v-show=\"visible\" class=\"tip\">图片识别和识别结果：</div>\r\n      <el-table\r\n        v-loading=\"loading\"\r\n        id=\"excel_table\"\r\n        :data=\"tableData\"\r\n        style=\"width: 100%\"\r\n      >\r\n        <el-table-column prop=\"prompt\" label=\"Prompt\"></el-table-column>\r\n        <el-table-column prop=\"value\" label=\"Value\"></el-table-column>\r\n      </el-table>\r\n    </el-col>\r\n    <el-col :span=\"10\">\r\n      <div class=\"demo-image__error\" style=\"text-align: center\">\r\n        <div class=\"block\" style=\"padding-top: 24px; padding-bottom: 10px\">\r\n          <span class=\"demonstration\"></span>\r\n        </div>\r\n        <el-image style=\"padding-left: 48px\" :src=\"imageUrl\" :fit=\"fit\">\r\n          <template #error>\r\n            <div class=\"image-slot\">\r\n              <el-icon><icon-picture /></el-icon>\r\n            </div>\r\n          </template>\r\n        </el-image>\r\n      </div>\r\n    </el-col>\r\n  </div>\r\n</template>\r\n\r\n<script >\r\nimport axios from \"axios\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { ref } from \"vue\";\r\nimport FileSaver from \"file-saver\";\r\nimport { write, utils } from \"xlsx\";\r\nimport { ocr } from \"@/api/TextIn\";\r\nimport { chatgpt } from \"@/api/chatgpt\";\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      fileData: \"\",\r\n      a: \"1\",\r\n      input: \"\",\r\n      visible: false,\r\n      tableData: [],\r\n      textforgpt:'',\r\n      imageUrl: \"\",\r\n      fit: \"cover\",\r\n      loading: false,\r\n      value: ref(1),\r\n      options: [\r\n        {\r\n          value: 1,\r\n          label: \"gpt-3.5-turbo\",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n\r\n  beforeCreate() {\r\n    // 读取文件\r\n    FileReader.prototype.reading = function ({ encode } = \"pms\") {\r\n      const bytes = new Uint8Array(this.result); // 无符号整型数组\r\n      const text = new TextDecoder(encode || \"UTF-8\").decode(bytes);\r\n      return text;\r\n    };\r\n    /* 重写readAsBinaryString函数 */\r\n    FileReader.prototype.readAsBinaryString = function (f) {\r\n      // 如果this未重写onload函数，则创建一个公共处理方式\r\n      if (!this.onload) {\r\n        this.onload = (e) => {\r\n          // 在this.onload函数中，完成公共处理\r\n          const rs = this.reading();\r\n          console.log(rs);\r\n        };\r\n      }\r\n      this.readAsArrayBuffer(f); // 内部会回调this.onload方法\r\n    };\r\n  },\r\n  methods: {\r\n    handleDownload(name) {\r\n      let table = document.getElementById(\"excel_table\");\r\n      let et = utils.table_to_book(table);\r\n      let output = write(et, {\r\n        bookType: \"xlsx\",\r\n        bookSST: true,\r\n        type: \"array\",\r\n      });\r\n\r\n      try {\r\n        FileSaver.saveAs(\r\n          new Blob([output], { type: \"application/octet-stream\" }),\r\n          `${name}.xlsx`\r\n        );\r\n      } catch (e) {}\r\n\r\n      return output;\r\n    },\r\n\r\n    // 储存选择的file文件\r\n    async uploadImg(file) {\r\n      var that = this;\r\n      this.fileData = file.file;\r\n      console.log(file.file);\r\n      this.$message({\r\n        showClose: true,\r\n        message: \"图片上传成功！\",\r\n        type: \"success\",\r\n      });\r\n      this.imageUrl = URL.createObjectURL(file.file);\r\n      console.log(this.fileData);\r\n      that.textforgpt = await ocr(this.fileData);\r\n      console.log(that.textforgpt);\r\n    },\r\n    // 保存识别结果\r\n    saveResult() {\r\n      // console.log(this.fileList)\r\n      var tempData = this.imgCscResult;\r\n      if (tempData === \"\") { \r\n        this.$message({\r\n          showClose: true,\r\n          message: \"识别结果内容为空！\",\r\n          type: \"warning\",\r\n        });\r\n      } else {\r\n        var tempResult = new Blob([tempData], {\r\n          type: \"text/plain;charset=utf-8\",\r\n        });\r\n        saveAs(tempResult, \"图片识别结果.txt\");\r\n      }\r\n    },\r\n    async imageCorrect() {\r\n      var that = this;\r\n      that.loading = true;\r\n      if (that.fileData === \"\") {\r\n        this.$message({\r\n          showClose: true,\r\n          message: \"请先选择要进行识别的图片文件！\",\r\n          type: \"warning\",\r\n        });\r\n        that.imgCscResult = \"\";\r\n        that.visible = false;\r\n        return;\r\n      }\r\n      const response = await chatgpt(that.textforgpt, that.input);\r\n      console.log(that.textforgpt);\r\n      console.log(that.input);\r\n      this.tableData = response;\r\n      this.loading = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tip {\r\n  font-family: Helvetica Neue, Arial, Helvetica, sans-serif;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n  margin-bottom: 20px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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"}]}